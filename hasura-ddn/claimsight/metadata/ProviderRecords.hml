---
kind: AggregateExpression
version: v1
definition:
  name: ProviderRecordsAggExp
  operand:
    object:
      aggregatedType: ProviderRecords
      aggregatableFields:
        - fieldName: createdAt
          aggregateExpression: TimestamptzAggExp
        - fieldName: id
          aggregateExpression: UuidAggExp
        - fieldName: name
          aggregateExpression: TextAggExp
        - fieldName: npi
          aggregateExpression: TextAggExp
        - fieldName: specialty
          aggregateExpression: TextAggExp
        - fieldName: updatedAt
          aggregateExpression: TimestamptzAggExp
  count:
    enable: true
    returnType: Int64
  graphql:
    selectTypeName: ProviderRecordsAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: ProviderRecordsOrderByExp
  operand:
    object:
      orderedType: ProviderRecords
      orderableFields:
        - fieldName: createdAt
          orderByExpression: TimestamptzOrderByExp
        - fieldName: id
          orderByExpression: UuidOrderByExp
        - fieldName: name
          orderByExpression: String1OrderByExp
        - fieldName: npi
          orderByExpression: String1OrderByExp
        - fieldName: specialty
          orderByExpression: String1OrderByExp
        - fieldName: updatedAt
          orderByExpression: TimestamptzOrderByExp
      orderableRelationships: []
  graphql:
    expressionTypeName: ProviderRecordsOrderByExp

---
kind: Model
version: v2
definition:
  name: ProviderRecords
  objectType: ProviderRecords
  source:
    dataConnectorName: postgres
    collection: provider_records
  filterExpressionType: ProviderRecordsBoolExp
  aggregateExpression: ProviderRecordsAggExp
  orderByExpression: ProviderRecordsOrderByExp
  graphql:
    selectMany:
      queryRootField: providerRecords
      subscription:
        rootField: providerRecords
    selectUniques:
      - queryRootField: providerRecordsByNpi
        uniqueIdentifier:
          - npi
        subscription:
          rootField: providerRecordsByNpi
      - queryRootField: providerRecordsById
        uniqueIdentifier:
          - id
        subscription:
          rootField: providerRecordsById
    filterInputTypeName: ProviderRecordsFilterInput
    aggregate:
      queryRootField: providerRecordsAggregate
      subscription:
        rootField: providerRecordsAggregate
  description: Legacy provider records from Hasura. Use federated Provider type
    for new queries.

---
kind: ModelPermissions
version: v1
definition:
  modelName: ProviderRecords
  permissions:
    - role: admin
      select:
        filter: null
        allowSubscriptions: true

