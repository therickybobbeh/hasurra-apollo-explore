# =============================================================================
# CLOUD DEPLOYMENT ENVIRONMENT VARIABLES
# =============================================================================
# Copy this file to .env.cloud and fill in your actual values
# This configuration is for deploying to Hasura DDN Cloud with cloud database

# -----------------------------------------------------------------------------
# Apollo Federation (Optional - only if using Apollo)
# -----------------------------------------------------------------------------
APOLLO_GRAPH_REF="your-graph-name@current"
APOLLO_KEY="service:your-graph-name:your-apollo-key"

# -----------------------------------------------------------------------------
# PostgreSQL Connector - Cloud Deployment
# -----------------------------------------------------------------------------
# Authorization header for the connector (generate with: openssl rand -base64 24)
CLAIMSIGHT_POSTGRES_AUTHORIZATION_HEADER="Bearer YOUR_GENERATED_TOKEN_HERE"

# Cloud PostgreSQL connection string (e.g., Neon, Supabase, or other cloud provider)
# Example Neon format: postgresql://user:password@host.region.neon.tech/dbname?sslmode=require
CLAIMSIGHT_POSTGRES_CONNECTION_URI="postgresql://your_user:your_password@your-host.cloud-provider.com/your_database?sslmode=require"

# Cloud connector port (typically 8080)
CLAIMSIGHT_POSTGRES_HASURA_CONNECTOR_PORT=8080

# Service token secret (should match authorization header token)
CLAIMSIGHT_POSTGRES_HASURA_SERVICE_TOKEN_SECRET="YOUR_GENERATED_TOKEN_HERE"

# OpenTelemetry settings (leave empty for cloud)
CLAIMSIGHT_POSTGRES_OTEL_EXPORTER_OTLP_ENDPOINT=""
CLAIMSIGHT_POSTGRES_OTEL_SERVICE_NAME="claimsight_postgres"

# Cloud connector URLs (generated by DDN after connector build)
# These will be automatically populated by: ddn supergraph build create
CLAIMSIGHT_POSTGRES_READ_URL="https://service-YOUR-CONNECTOR-ID.a.run.app"
CLAIMSIGHT_POSTGRES_WRITE_URL="https://service-YOUR-CONNECTOR-ID.a.run.app"

# -----------------------------------------------------------------------------
# PromptQL Configuration
# -----------------------------------------------------------------------------
# Generate with: ddn project init --with-promptql
PROMPTQL_SECRET_KEY="your-promptql-secret-key-here"

# Your OpenAI API key from https://platform.openai.com/api-keys
# This is required for PromptQL to use your OpenAI account
OPENAI_API_KEY="sk-proj-your-openai-api-key-here"

# -----------------------------------------------------------------------------
# Setup Instructions
# -----------------------------------------------------------------------------
# 1. Create cloud database (e.g., Neon: https://console.neon.tech/)
# 2. Run setup-neon-db.sql and seed-neon-data.sql against your database
# 3. Generate tokens: openssl rand -base64 24
# 4. Get OpenAI API key: https://platform.openai.com/api-keys
# 5. Build connector: ddn connector build create postgres --subgraph claimsight
# 6. Copy generated connector URL to CLAIMSIGHT_POSTGRES_READ_URL/WRITE_URL
# 7. Deploy: ddn supergraph build create --env-file .env.cloud --apply
